---
- name: "Install Requirements for Spectrum-Scale"
  hosts: spectrumscale
  gather_facts: false
  vars_files:
    - "./vars/vars.yaml"
  tasks:
#    - name: "Add EPEL-Release-Repo"
#      yum:
#        name: epel-release.noarch
#        state: present
    - name: "Installiere bind-utils-9.11.4-16.P2.el7.x86_64"
      yum:
        name: bind-utils-9.11.4-16.P2.el7.x86_64
        state: present
    - name: "Installiere nfs-utils.x86_64"
      yum:
        name: nfs-utils.x86_64
        state: present
    - name: "Installiere net-tools"
      yum:
        name: net-tools
        state: present
    - name: "Installiere ntp.x86_64"
      yum:
        name: ntp.x86_64
        state: present
    - name: "Installiere cpp.x86_64"
      yum:
        name: cpp.x86_64
        state: present
    - name: "Installiere gcc.x86_64"
      yum:
        name: gcc.x86_64
        state: present
    - name: "Installiere gcc-c++.x86_64"
      yum:
        name: gcc-c++.x86_64
        state: present
    - name: "Check if folder exists"
      stat:
        path: "{{ dir_root }}"
      register: folder_details
    - name: "DEBUG"
      debug:
        msg: "{{ folder_details }}"
    - name: "Spectrum-Scale-Entpack-Verzeichnis erstellen"
      file:
        recurse: true
        path: "{{ item }}"
        state: "directory"
      with_items:
        - "{{ dir_root }}"
        - "{{ sps_mountpoint_fs1 }}"
      when:
        - not folder_details.stat.exists
    - name: "Check if TAR-File exists on Remote-Machine in dir_rootectory"
      stat:
        path: "{{ dir_root }}{{ sps_tar_filename }}"
      register: tar_details
    - name: "DEBUG"
      debug:
        msg: "{{ tar_details }}"
    - name: "Mounting NFS-Share"
      mount:
        fstype: nfs
        opts: defaults
        state: mounted
        src: "{{ src_nas_mount }}"
        path: "{{ dest_nas_mount_path }}"
        backup: yes
      when:
        - not tar_details.stat.exists
    - name: "Wait a Second..."
      wait_for:
        timeout: 1
    - name: "Copy TAR-File from NFS-Server to SPS-Nodes"
      copy:
        src: "{{ dest_nas_mount_path }}/spectrumscale/{{ sps_tar_filename }}"
        dest: "{{ dir_root }}"
        remote_src: yes
      when:
        - not tar_details.stat.exists
    - name: "Unmounting NFS-Share"
      mount:
        fstype: nfs
        opts: defaults
        state: absent
        src: "{{ src_nas_mount }}"
        path: "{{ dest_nas_mount_path }}"
        backup: yes
      when:
        - not tar_details.stat.exists
    - name: "Check if TAR-File exists on Remote-Machine"
      stat:
        path: "{{ dir_root }}{{ sps_tar_filename }}"
      register: tar_after_copy_details
    - name: "Extract Tar-File"
      unarchive:
        src: "{{ dir_root }}{{ sps_tar_filename }}"
        dest: "{{ dir_root }}"
        remote_src: yes
      when:
        - tar_after_copy_details.stat.exists
    - name: "Copy Kernel Devel from Ansible-Control-Node"
      copy:
        src: "../../dependencies/kernel-devel-3.10.0-1062.el7.x86_64.rpm"
        dest: "{{ dir_root }}/kernel-devel-3.10.0-1062.el7.x86_64.rpm"
    - name: "Copy Kernel Header from Ansible-Control-Node"
      copy:
        src: "../../dependencies/kernel-headers-3.10.0-1062.el7.x86_64.rpm"
        dest: "{{ dir_root }}/kernel-headers-3.10.0-1062.el7.x86_64.rpm"
    - name: "Install Kernel Devel"
      yum:
        name: "{{ dir_root }}/kernel-devel-3.10.0-1062.el7.x86_64.rpm"
        allow_downgrade: yes
        state: present
    - name: "Install Kernel Header"
      yum:
        name: "{{ dir_root }}/kernel-headers-3.10.0-1062.el7.x86_64.rpm"
        allow_downgrade: yes
        state: present
#    - name: "Remove EPEL-Release-Repo"
#      yum:
#        name: epel-release.noarch
#        state: absent
    - name: "Stop and disable firewalld"
      service:
        name: firewalld
        state: stopped
        enabled: false
