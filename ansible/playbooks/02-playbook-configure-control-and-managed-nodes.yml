# Beginn erstes PLAY
- name: "Configure local control-node"
  hosts: 127.0.0.1
  vars_files:
    - "../vars/vars.yaml"
  tasks:
# Erstellung des Inventory-Files im lokalen Ordner
    - name: "01 - Create main.tf-file"
      template:
        src: "../configs/inventory.j2"
        dest: "inventory"

# Beginn zweites PLAY
- name: "{{ lookup('pipe','date \"+%Y-%m-%d %H-%M-%S\"') }} | Playbook Prepare Ansible-Control-Node and Spectrum-Scale-Nodes"
  hosts: spectrumscale
  vars_files:
    - "../vars/vars.yaml"
  tasks:
    - name: "01 - Copy /etc/hosts from control-node to managed-hosts"
      copy:
        src: "/etc/hosts"
        dest: "/etc/hosts"
        force: "true"


# Beim Aufruf des Playbook, müssen der Username und das Passwort für die Subscription mit angegeben werden
    - name: "02 - Execute subsciption-manager and auto-subscribe to available content."
      redhat_subscription:
        state: "present"
        username: "{{subscription_user}}"
        password: "{{subscription_pass}}"
        autosubscribe: "true"

    - name: "03 - Install epel-release"
      yum:
        name: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm"
        state: present


# Install software-packages
    - name: "04 - Install sshpass"
      yum:
        name: "sshpass"
        state: present
      tags:
      - ssh

# SSH-Key-Erstellung auf Control-Node
    - name: "04 - Create SSH-KEYPAIR on localhost to use from Ansible-Control-Node"
      openssh_keypair:
        path: "/root/.ssh/id_rsa"
        size: 4096
        type: "rsa"
      tags:
      - ssh

# Kopieren des Rootpasswords in der Datei auf die Managed-Nodes
    - name: "05 - Copy ../configs/rootpassword-file from Ansible-Control-Node to Managed SPS-Nodes"
      copy:
        src: "../configs/rootpassword"
        dest: "/root/rootpassword"

# Verteilen der Public-Keys auf alle Nodes
    - name: "06 - Distribute SSH-Pub-Keys to Managed-SPS-Nodes"
      raw: "{{ item }}"
      with_items:
        - "sshpass -f /root/rootpassword ssh-copy-id -i /root/.ssh/id_rsa -o StrictHostKeyChecking=no root@{{ sps.sps1.hostname }}"
        - "sshpass -f /root/rootpassword ssh-copy-id -i /root/.ssh/id_rsa -o StrictHostKeyChecking=no root@{{ sps.sps1.fqdn }}"
        - "sshpass -f /root/rootpassword ssh-copy-id -i /root/.ssh/id_rsa -o StrictHostKeyChecking=no root@{{ sps.sps1.ip }}"
        - "sshpass -f /root/rootpassword ssh-copy-id -i /root/.ssh/id_rsa -o StrictHostKeyChecking=no root@{{ sps.sps2.hostname }}"
        - "sshpass -f /root/rootpassword ssh-copy-id -i /root/.ssh/id_rsa -o StrictHostKeyChecking=no root@{{ sps.sps2.fqdn }}"
        - "sshpass -f /root/rootpassword ssh-copy-id -i /root/.ssh/id_rsa -o StrictHostKeyChecking=no root@{{ sps.sps2.ip }}"
        - "sshpass -f /root/rootpassword ssh-copy-id -i /root/.ssh/id_rsa -o StrictHostKeyChecking=no root@{{ sps.sps3.hostname }}"
        - "sshpass -f /root/rootpassword ssh-copy-id -i /root/.ssh/id_rsa -o StrictHostKeyChecking=no root@{{ sps.sps3.fqdn }}"
        - "sshpass -f /root/rootpassword ssh-copy-id -i /root/.ssh/id_rsa -o StrictHostKeyChecking=no root@{{ sps.sps3.ip }}"
